name: Build_armv7

on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest


    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set -ex
        # 清理磁盘空间
        sudo rm -rf \
          /usr/share/dotnet \
          /usr/local/lib/android \
          /opt/ghc
        
        # 使用 ImmortalWrt 官方环境脚本
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        
        # 额外安装必要工具
        sudo apt install -y qemu-utils upx-ucl

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/immortalwrt/immortalwrt
        REPO_BRANCH: master
      run: |
        git clone -b $REPO_BRANCH --single-branch --filter=blob:none $REPO_URL immortalwrt
        cd immortalwrt
        echo "src-git helloworld https://github.com/fw876/helloworld.git" >> ./feeds.conf.default

    - name: Update feeds
      working-directory: ./immortalwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Install PassWall
      working-directory: ./immortalwrt
      run: |
        # 更安全的 PassWall 安装方式
        git clone https://github.com/xiaorouji/openwrt-passwall-packages package/passwall-packages
        git clone https://github.com/xiaorouji/openwrt-passwall package/passwall
        ./scripts/feeds install -a

    - name: Install Argon theme
      working-directory: ./immortalwrt
      run: |
        git clone https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon

    - name: Install Lucky plugin
      working-directory: ./immortalwrt
      run: |
        git clone https://github.com/gdy666/luci-app-lucky.git package/lucky

    - name: Apply configuration
      working-directory: ./immortalwrt
      run: |
        # 应用基础配置
        [ -e ../armv7.config ] && cp ../armv7.config .config
        [ -f ./customize.sh ] && chmod +x ./customize.sh && ./customize.sh
        
        # 生成默认配置
        make defconfig

    - name: Download packages
      working-directory: ./immortalwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;  # 清理无效下载

    - name: Build firmware
      working-directory: ./immortalwrt
      run: |
        echo "Building with $(nproc) threads"
        make -j$(($(nproc) + 1)) V=s

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt_armv7
        path: immortalwrt/bin/targets/*/*
        retention-days: 3
