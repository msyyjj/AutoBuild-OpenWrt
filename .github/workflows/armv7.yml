name: Build_armv7-immortal

on:
  workflow_dispatch:
  repository_dispatch:

jobs:
  download:
    name: Download Sources
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Clean system to free space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc \
                      /usr/local/share/boost /usr/local/share/gradle /usr/local/lib/node_modules

      - name: Init build environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          sudo apt install -y qemu-utils upx-ucl uuid-dev

      - name: Clone ImmortalWrt
        run: |
          git clone --depth=1 https://github.com/immortalwrt/immortalwrt immortalwrt
          cd immortalwrt
          echo "src-git helloworld https://github.com/fw876/helloworld.git" >> feeds.conf.default

      - name: Update feeds
        working-directory: ./immortalwrt
        run: |
          sed -i '$a src-git smpackage https://github.com/kenzok8/small-package' feeds.conf.default
          sed -i '$a src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main' feeds.conf.default
          sed -i '$a src-git passwall_luci https://github.com/xiaorouji/openwrt-passwall.git;main' feeds.conf.default
          ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: Apply configuration
        working-directory: ./immortalwrt
        run: |
          [ -e ../armv7.config ] && cp ../armv7.config .config
          [ -f ./customize.sh ] && chmod +x ./customize.sh && ./customize.sh
          make defconfig

      - name: Download packages
        working-directory: ./immortalwrt
        run: |
          make download -j$(nproc)
          find dl -size -1024c -exec rm -f {} \;
          find dl -size +100M -exec rm -f {} \;

      - name: Save dl cache
        uses: actions/cache@v3
        with:
          path: immortalwrt/dl
          key: dl-armv7-${{ runner.os }}-${{ hashFiles('armv7.config') }}
          restore-keys: |
            dl-armv7-${{ runner.os }}-
            dl-armv7-

      - name: Upload dl directory
        uses: actions/upload-artifact@v4
        with:
          name: dl-armv7
          path: immortalwrt/dl

  build:
    name: Build Firmware
    needs: download
    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download dl directory
        uses: actions/download-artifact@v4
        with:
          name: dl-armv7
          path: immortalwrt/dl

      - name: Clone ImmortalWrt
        run: |
          git clone --depth=1 https://github.com/immortalwrt/immortalwrt immortalwrt

      - name: Apply configuration
        working-directory: ./immortalwrt
        run: |
          [ -e ../armv7.config ] && cp ../armv7.config .config
          make defconfig

      - name: Check disk usage before build
        run: df -h && du -sh ./immortalwrt/*

      - name: Build firmware
        working-directory: ./immortalwrt
        run: |
          echo "Building with $(nproc) threads"
          make -j$(($(nproc)+1)) V=s

      - name: Check disk usage after build
        run: df -h && du -sh ./immortalwrt/*

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt_armv7
          path: immortalwrt/bin/targets/*/*

      # ✅ 可选：构建成功通知
      # - name: Notify success
      #   run: curl -s "https://sc.ftqq.com/YOUR_KEY.send?text=Build Success&desp=armv7 firmware build completed"
